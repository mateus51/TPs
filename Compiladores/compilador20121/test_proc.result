Starting parse
Entering state 0
Reading a token: Next token is token PROGRAM ()
Shifting token PROGRAM ()
Entering state 1
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 3
Reading a token: Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 5
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 9 (line 82):
   $1 = token ID ()
-> $$ = nterm ident_list ()
Stack now 0 1 3 5
Entering state 14
Reading a token: Next token is token COMMA ()
Shifting token COMMA ()
Entering state 21
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 52
Reducing stack by rule 8 (line 81):
   $1 = nterm ident_list ()
   $2 = token COMMA ()
   $3 = token ID ()
-> $$ = nterm ident_list ()
Stack now 0 1 3 5
Entering state 14
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 22
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 53
Reducing stack by rule 10 (line 84):
   $1 = token INTEGER ()
-> $$ = nterm type ()
Stack now 0 1 3 5 14 22
Entering state 57
Reducing stack by rule 7 (line 79):
   $1 = nterm ident_list ()
   $2 = token COLON ()
   $3 = nterm type ()
-> $$ = nterm dcl_var ()
Stack now 0 1 3 5
Entering state 13
Reducing stack by rule 5 (line 76):
   $1 = nterm dcl_var ()
-> $$ = nterm decl ()
Stack now 0 1 3 5
Entering state 12
Reducing stack by rule 3 (line 73):
   $1 = nterm decl ()
-> $$ = nterm decl_list ()
Stack now 0 1 3 5
Entering state 11
Reading a token: Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 18
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 6
Reducing stack by rule 16 (line 93):
   $1 = token INTEGER ()
-> $$ = nterm tipo_retornado ()
Stack now 0 1 3 5 11 18
Entering state 17
Reading a token: Next token is token PROC ()
Shifting token PROC ()
Entering state 23
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 58
Reading a token: Next token is token LPAR ()
Shifting token LPAR ()
Entering state 85
Reading a token: Next token is token VALUE ()
Shifting token VALUE ()
Entering state 107
Reducing stack by rule 29 (line 112):
   $1 = token VALUE ()
-> $$ = nterm modo ()
Stack now 0 1 3 5 11 18 17 23 58 85
Entering state 111
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 53
Reducing stack by rule 10 (line 84):
   $1 = token INTEGER ()
-> $$ = nterm type ()
Stack now 0 1 3 5 11 18 17 23 58 85 111
Entering state 133
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 138
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 141
Reducing stack by rule 28 (line 110):
   $1 = nterm modo ()
   $2 = nterm type ()
   $3 = token COLON ()
   $4 = token ID ()
-> $$ = nterm parametro ()
Stack now 0 1 3 5 11 18 17 23 58 85
Entering state 110
Reducing stack by rule 26 (line 107):
   $1 = nterm parametro ()
-> $$ = nterm lista_parametros ()
Stack now 0 1 3 5 11 18 17 23 58 85
Entering state 109
Reading a token: Next token is token RPAR ()
Shifting token RPAR ()
Entering state 132
Reducing stack by rule 25 (line 105):
   $1 = token LPAR ()
   $2 = nterm lista_parametros ()
   $3 = token RPAR ()
-> $$ = nterm espec_parametros ()
Stack now 0 1 3 5 11 18 17 23 58
Entering state 86
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 112
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 9 (line 82):
   $1 = token ID ()
-> $$ = nterm ident_list ()
Stack now 0 1 3 5 11 18 17 23 58 86 112
Entering state 14
Reading a token: Next token is token COLON ()
Shifting token COLON ()
Entering state 22
Reading a token: Next token is token INTEGER ()
Shifting token INTEGER ()
Entering state 53
Reducing stack by rule 10 (line 84):
   $1 = token INTEGER ()
-> $$ = nterm type ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 14 22
Entering state 57
Reducing stack by rule 7 (line 79):
   $1 = nterm ident_list ()
   $2 = token COLON ()
   $3 = nterm type ()
-> $$ = nterm dcl_var ()
Stack now 0 1 3 5 11 18 17 23 58 86 112
Entering state 13
Reducing stack by rule 5 (line 76):
   $1 = nterm dcl_var ()
-> $$ = nterm decl ()
Stack now 0 1 3 5 11 18 17 23 58 86 112
Entering state 12
Reducing stack by rule 3 (line 73):
   $1 = nterm decl ()
-> $$ = nterm decl_list ()
Stack now 0 1 3 5 11 18 17 23 58 86 112
Entering state 134
Reading a token: Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 139
Reading a token: Next token is token BEGIN_TOK ()
Shifting token BEGIN_TOK ()
Entering state 19
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 39
Reading a token: Next token is token ATRIB ()
Shifting token ATRIB ()
Entering state 80
Reading a token: Next token is token INTEGER_CONSTANT ()
Shifting token INTEGER_CONSTANT ()
Entering state 64
Reducing stack by rule 81 (line 185):
   $1 = token INTEGER_CONSTANT ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 39 80
Entering state 75
Reducing stack by rule 64 (line 163):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 39 80
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 39 80
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 39 80
Entering state 71
Reading a token: Next token is token SEMICOLON ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 39 80
Entering state 70
Next token is token SEMICOLON ()
Reducing stack by rule 50 (line 144):
   $1 = nterm simple_expr ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 39 80
Entering state 103
Reducing stack by rule 41 (line 128):
   $1 = token ID ()
   $2 = token ATRIB ()
   $3 = nterm expr ()
-> $$ = nterm assign_stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19
Entering state 43
Reducing stack by rule 34 (line 120):
   $1 = nterm assign_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19
Entering state 42
Reducing stack by rule 33 (line 118):
   $1 = nterm stmt ()
-> $$ = nterm stmt_list ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19
Entering state 41
Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 81
Reading a token: Next token is token REPEAT ()
Shifting token REPEAT ()
Entering state 36
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 39
Reading a token: Next token is token ATRIB ()
Shifting token ATRIB ()
Entering state 80
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 63
Reading a token: Next token is token MULOP ()
Reducing stack by rule 63 (line 162):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80
Entering state 71
Next token is token MULOP ()
Shifting token MULOP ()
Entering state 98
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 63
Reading a token: Next token is token SEMICOLON ()
Reducing stack by rule 63 (line 162):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80 71 98
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80 71 98
Entering state 124
Reducing stack by rule 60 (line 157):
   $1 = nterm term ()
   $2 = token MULOP ()
   $3 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80
Entering state 71
Next token is token SEMICOLON ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80
Entering state 70
Next token is token SEMICOLON ()
Reducing stack by rule 50 (line 144):
   $1 = nterm simple_expr ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 39 80
Entering state 103
Reducing stack by rule 41 (line 128):
   $1 = token ID ()
   $2 = token ATRIB ()
   $3 = nterm expr ()
-> $$ = nterm assign_stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36
Entering state 43
Reducing stack by rule 34 (line 120):
   $1 = nterm assign_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36
Entering state 42
Reducing stack by rule 33 (line 118):
   $1 = nterm stmt ()
-> $$ = nterm stmt_list ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36
Entering state 77
Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 81
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 39
Reading a token: Next token is token ATRIB ()
Shifting token ATRIB ()
Entering state 80
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 63
Reading a token: Next token is token ADDOP ()
Reducing stack by rule 63 (line 162):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80
Entering state 71
Next token is token ADDOP ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80
Entering state 70
Next token is token ADDOP ()
Shifting token ADDOP ()
Entering state 97
Reading a token: Next token is token INTEGER_CONSTANT ()
Shifting token INTEGER_CONSTANT ()
Entering state 64
Reducing stack by rule 81 (line 185):
   $1 = token INTEGER_CONSTANT ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80 70 97
Entering state 75
Reducing stack by rule 64 (line 163):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80 70 97
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80 70 97
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80 70 97
Entering state 123
Reading a token: Next token is token UNTIL ()
Reducing stack by rule 58 (line 154):
   $1 = nterm simple_expr ()
   $2 = token ADDOP ()
   $3 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80
Entering state 70
Next token is token UNTIL ()
Reducing stack by rule 50 (line 144):
   $1 = nterm simple_expr ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81 39 80
Entering state 103
Reducing stack by rule 41 (line 128):
   $1 = token ID ()
   $2 = token ATRIB ()
   $3 = nterm expr ()
-> $$ = nterm assign_stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81
Entering state 43
Reducing stack by rule 34 (line 120):
   $1 = nterm assign_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 81
Entering state 104
Reducing stack by rule 32 (line 117):
   $1 = nterm stmt_list ()
   $2 = token SEMICOLON ()
   $3 = nterm stmt ()
-> $$ = nterm stmt_list ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36
Entering state 77
Next token is token UNTIL ()
Shifting token UNTIL ()
Entering state 99
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 63
Reading a token: Next token is token LT ()
Reducing stack by rule 63 (line 162):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99
Entering state 71
Next token is token LT ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99
Entering state 70
Next token is token LT ()
Shifting token LT ()
Entering state 94
Reading a token: Next token is token INTEGER_CONSTANT ()
Shifting token INTEGER_CONSTANT ()
Entering state 64
Reducing stack by rule 81 (line 185):
   $1 = token INTEGER_CONSTANT ()
-> $$ = nterm constant ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99 70 94
Entering state 75
Reducing stack by rule 64 (line 163):
   $1 = nterm constant ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99 70 94
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99 70 94
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99 70 94
Entering state 71
Reading a token: Next token is token END ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99 70 94
Entering state 120
Next token is token END ()
Reducing stack by rule 54 (line 148):
   $1 = nterm simple_expr ()
   $2 = token LT ()
   $3 = nterm simple_expr ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81 36 77 99
Entering state 125
Reducing stack by rule 45 (line 135):
   $1 = token REPEAT ()
   $2 = nterm stmt_list ()
   $3 = token UNTIL ()
   $4 = nterm expr ()
-> $$ = nterm repeat_stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81
Entering state 45
Reducing stack by rule 36 (line 122):
   $1 = nterm repeat_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19 41 81
Entering state 104
Reducing stack by rule 32 (line 117):
   $1 = nterm stmt_list ()
   $2 = token SEMICOLON ()
   $3 = nterm stmt ()
-> $$ = nterm stmt_list ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 19
Entering state 41
Next token is token END ()
Shifting token END ()
Entering state 82
Reducing stack by rule 31 (line 115):
   $1 = token BEGIN_TOK ()
   $2 = nterm stmt_list ()
   $3 = token END ()
-> $$ = nterm compound_stmt ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139
Entering state 142
Reading a token: Next token is token BEGIN_TOK ()
Reducing stack by rule 15 (line 91):
-> $$ = nterm vazio ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 142
Entering state 144
Reducing stack by rule 24 (line 103):
   $1 = nterm vazio ()
-> $$ = nterm id_return ()
Stack now 0 1 3 5 11 18 17 23 58 86 112 134 139 142
Entering state 145
Reducing stack by rule 21 (line 99):
   $1 = token COLON ()
   $2 = nterm decl_list ()
   $3 = token SEMICOLON ()
   $4 = nterm compound_stmt ()
   $5 = nterm id_return ()
-> $$ = nterm corpo ()
Stack now 0 1 3 5 11 18 17 23 58 86
Entering state 114
Reducing stack by rule 14 (line 89):
   $1 = nterm tipo_retornado ()
   $2 = token PROC ()
   $3 = token ID ()
   $4 = nterm espec_parametros ()
   $5 = nterm corpo ()
-> $$ = nterm dcl_proc ()
Stack now 0 1 3 5 11 18
Entering state 15
Reducing stack by rule 6 (line 77):
   $1 = nterm dcl_proc ()
-> $$ = nterm decl ()
Stack now 0 1 3 5 11 18
Entering state 24
Reducing stack by rule 2 (line 72):
   $1 = nterm decl_list ()
   $2 = token SEMICOLON ()
   $3 = nterm decl ()
-> $$ = nterm decl_list ()
Stack now 0 1 3 5
Entering state 11
Next token is token BEGIN_TOK ()
Shifting token BEGIN_TOK ()
Entering state 19
Reading a token: Next token is token READ ()
Shifting token READ ()
Entering state 37
Reading a token: Next token is token LPAR ()
Shifting token LPAR ()
Entering state 78
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 10
Reducing stack by rule 9 (line 82):
   $1 = token ID ()
-> $$ = nterm ident_list ()
Stack now 0 1 3 5 11 19 37 78
Entering state 100
Reading a token: Next token is token RPAR ()
Shifting token RPAR ()
Entering state 126
Reducing stack by rule 46 (line 137):
   $1 = token READ ()
   $2 = token LPAR ()
   $3 = nterm ident_list ()
   $4 = token RPAR ()
-> $$ = nterm read_stmt ()
Stack now 0 1 3 5 11 19
Entering state 46
Reducing stack by rule 37 (line 123):
   $1 = nterm read_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 3 5 11 19
Entering state 42
Reducing stack by rule 33 (line 118):
   $1 = nterm stmt ()
-> $$ = nterm stmt_list ()
Stack now 0 1 3 5 11 19
Entering state 41
Reading a token: Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 81
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 39
Reading a token: Next token is token ATRIB ()
Shifting token ATRIB ()
Entering state 80
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 63
Reading a token: Next token is token LPAR ()
Reducing stack by rule 80 (line 183):
   $1 = token ID ()
-> $$ = nterm simple_variable_or_proc ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 51
Reducing stack by rule 79 (line 181):
   $1 = nterm simple_variable_or_proc ()
-> $$ = nterm variable ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 50
Next token is token LPAR ()
Shifting token LPAR ()
Entering state 84
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 63
Reading a token: Next token is token RPAR ()
Reducing stack by rule 63 (line 162):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 19 41 81 39 80 50 84
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 19 41 81 39 80 50 84
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 19 41 81 39 80 50 84
Entering state 71
Next token is token RPAR ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 19 41 81 39 80 50 84
Entering state 70
Next token is token RPAR ()
Reducing stack by rule 50 (line 144):
   $1 = nterm simple_expr ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 11 19 41 81 39 80 50 84
Entering state 102
Reducing stack by rule 48 (line 141):
   $1 = nterm expr ()
-> $$ = nterm expr_list ()
Stack now 0 1 3 5 11 19 41 81 39 80 50 84
Entering state 106
Next token is token RPAR ()
Shifting token RPAR ()
Entering state 130
Reducing stack by rule 69 (line 169):
   $1 = nterm variable ()
   $2 = token LPAR ()
   $3 = nterm expr_list ()
   $4 = token RPAR ()
-> $$ = nterm function_ref_par ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 74
Reducing stack by rule 67 (line 166):
   $1 = nterm function_ref_par ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 71
Reading a token: Next token is token SEMICOLON ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 70
Next token is token SEMICOLON ()
Reducing stack by rule 50 (line 144):
   $1 = nterm simple_expr ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 11 19 41 81 39 80
Entering state 103
Reducing stack by rule 41 (line 128):
   $1 = token ID ()
   $2 = token ATRIB ()
   $3 = nterm expr ()
-> $$ = nterm assign_stmt ()
Stack now 0 1 3 5 11 19 41 81
Entering state 43
Reducing stack by rule 34 (line 120):
   $1 = nterm assign_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 3 5 11 19 41 81
Entering state 104
Reducing stack by rule 32 (line 117):
   $1 = nterm stmt_list ()
   $2 = token SEMICOLON ()
   $3 = nterm stmt ()
-> $$ = nterm stmt_list ()
Stack now 0 1 3 5 11 19
Entering state 41
Next token is token SEMICOLON ()
Shifting token SEMICOLON ()
Entering state 81
Reading a token: Next token is token WRITE ()
Shifting token WRITE ()
Entering state 38
Reading a token: Next token is token LPAR ()
Shifting token LPAR ()
Entering state 79
Reading a token: Next token is token ID ()
Shifting token ID ()
Entering state 63
Reading a token: Next token is token RPAR ()
Reducing stack by rule 63 (line 162):
   $1 = token ID ()
-> $$ = nterm factor ()
Stack now 0 1 3 5 11 19 41 81 38 79
Entering state 73
Reducing stack by rule 62 (line 160):
   $1 = nterm factor ()
-> $$ = nterm factor_a ()
Stack now 0 1 3 5 11 19 41 81 38 79
Entering state 72
Reducing stack by rule 59 (line 156):
   $1 = nterm factor_a ()
-> $$ = nterm term ()
Stack now 0 1 3 5 11 19 41 81 38 79
Entering state 71
Next token is token RPAR ()
Reducing stack by rule 57 (line 153):
   $1 = nterm term ()
-> $$ = nterm simple_expr ()
Stack now 0 1 3 5 11 19 41 81 38 79
Entering state 70
Next token is token RPAR ()
Reducing stack by rule 50 (line 144):
   $1 = nterm simple_expr ()
-> $$ = nterm expr ()
Stack now 0 1 3 5 11 19 41 81 38 79
Entering state 102
Reducing stack by rule 48 (line 141):
   $1 = nterm expr ()
-> $$ = nterm expr_list ()
Stack now 0 1 3 5 11 19 41 81 38 79
Entering state 101
Next token is token RPAR ()
Shifting token RPAR ()
Entering state 128
Reducing stack by rule 47 (line 139):
   $1 = token WRITE ()
   $2 = token LPAR ()
   $3 = nterm expr_list ()
   $4 = token RPAR ()
-> $$ = nterm write_stmt ()
Stack now 0 1 3 5 11 19 41 81
Entering state 47
Reducing stack by rule 38 (line 124):
   $1 = nterm write_stmt ()
-> $$ = nterm stmt ()
Stack now 0 1 3 5 11 19 41 81
Entering state 104
Reducing stack by rule 32 (line 117):
   $1 = nterm stmt_list ()
   $2 = token SEMICOLON ()
   $3 = nterm stmt ()
-> $$ = nterm stmt_list ()
Stack now 0 1 3 5 11 19
Entering state 41
Reading a token: Next token is token END ()
Shifting token END ()
Entering state 82
Reducing stack by rule 31 (line 115):
   $1 = token BEGIN_TOK ()
   $2 = nterm stmt_list ()
   $3 = token END ()
-> $$ = nterm compound_stmt ()
Stack now 0 1 3 5 11
Entering state 20
Reducing stack by rule 1 (line 69):
   $1 = token PROGRAM ()
   $2 = token ID ()
   $3 = token SEMICOLON ()
   $4 = nterm decl_list ()
   $5 = nterm compound_stmt ()
reduced program
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: Now at end of input.
Shifting token $end ()
Entering state 4
Stack now 0 2 4
Cleanup: popping token $end ()
Cleanup: popping nterm program ()
