
   # # # # # # # # # # # # #
  # Pesquisa Operacional    #
  # Prof. Alexandre Cunha   #
  # notasdogarcia.blog.com  #
   # # # # # # # # # # # # #

  Dualidade: 
    - D. Fraca.                     ©
    - D. Forte.                     ×
    - T. das Folgas Complementares. ×
    - Pares P/D                     ×
    - Análise de Sensibilidade.     ×
  
  Até Pares P/D é coberto pelo pdf:
  http://www.feg.unesp.br/~fmarins/po/slides/2o.s/Teoria%20da%20Dualidade.pdf
  
  Logo vou usar os slides ao invés das minhas notas.
  
  (P) max cTx  (D) min bTy
      Ax = b       yTA >= cT
  
  Dualidade Fraca: ¯x é viável para (P) e ȳ é viável para (D) tal que:
  
    cT¯x <= bTȳ
  
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  Em dualidade fraca existem os casos:
  
  Sol. Primal (max)     |  Sol. Dual (min)
  Ótima finita             Ótima finita.
  Inviável                 Inviável
  Inviável                 Ilimitada
  Ilimitada                Inviável.
  
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  Exemplo de problema inviável/inviável:

  min  x1 + 2x2 (primal)
  x1 + x2 = 1
  2x1 + 2x2 = 3
  
  max p1 + 3p2 (dual)
  p1 + 2p2 = 1
  p1 + 2p2 = 2
  
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
CONCEITO:
  Dualidade Forte 
  
  Seja:
  (P) max cTx  (D) min bTy
      Ax = b       yTA >= cT
  
  Se o programa primal admitir um otimizador ¯x (ct¯x < +infinito)
  então o seu dual também admite um minimizador ȳ tal que
  
    cT¯x = bTȳ
  
  Ou seja é semelhante à Dualidade fraca:
  
    cT¯x <= bTȳ
  
  Mas é uma relação de igualdade.
  
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  max cTx
  Ax = b
  x >= 0
  
  // O professor mostrou a equação de iteração do simplex.
  
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  Prova:
  
  Base ótima associada à ¯x é B.
  Simplex terminou com a seguinte condição sendo satisfeita:
    
    (cnT - cbT B⁻¹N) <= 0
  
  Definir uma variável dual: yT = cb T B⁻¹
  Se yT = cb T B⁻¹  for viável o objetivo dual : cbT B⁻¹ b
  
  Sobre a viabilidade deste escolha:
  
    y T A     >= cT
    y T [B N] >= [cbT cnT]
  
  i) yTB >= cbT ?    cbT B⁻¹B= cbT (ok)
  ii) yTN >= cnT ?   cbTB⁻¹N >= cnT
  
  // Condição de otimalidade primal é condição de viabilidade dual.
  
  Em resumo a solução yT = cbT B⁻¹ é viável para o dual e cT¯x é igual à cb T B⁻¹b = ȳTb
  Logo ¯x e ȳ são ótimos respectivamente para P e D.
  
  Se ¯x e ȳ formam um par primal dual ótimo, então valem as condições de complementaridade e folga.
  
    (A¯x - b)T  ȳ = 0 (n restrições, uma para cada variável do dual)
  
    (ȳTA - cT) ¯x = 0 (m restrições, uma para cada variável do primal)
  
  Seja ai = linha i da matriz A
  
    (ai T ¯x = bi) yi = 0 i = 1, ..., n.
  
  Primal na forma padrão => a condição I é satisfeita dada a viabilidade de ~x em P
  
  Assim:
  
    (~yT Aj - cj) ~xj = 0, j = 1, ..., n
  
  Aj = j-ésimo coluna da matriz A.
  
  Dois casos à considerar:
  
  a) j é indice de variável básica ~xj >= 0 (~y T Aj - Ci)
     (assumir ~xj > 0)
  
  b) j é não básica: xj é não básica.
     ~xj = 0
  
  Se as condições de complementaridade de folga valem (C.C.F.) então ~x e ~y formam par primal dual ótimo.
  
  (A~x - b)T ~y = 0        (~y T A - cT) ~x = 0
  
  (A~x)T ~y = bT~y         ~y T A ~x = cT~x
  
  cT~x = y T A ~x <= bT~y = A~xT y
  yTA~x = A ~x T y
  
  
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
  
  // Fim da aula!
  
  Hoje nós varremos todos os significados teoricos importantes de programação linear.
  
  
  
  
  
